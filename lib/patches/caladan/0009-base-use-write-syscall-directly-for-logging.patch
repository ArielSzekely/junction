From 6669ac2997b95caea7bf6a941f8b3b98962171f0 Mon Sep 17 00:00:00 2001
From: Josh Fried <joshuafried@gmail.com>
Date: Wed, 4 Jan 2023 14:08:00 -0500
Subject: [PATCH 09/10] base: use write syscall directly for logging

---
 base/log.c         | 5 ++++-
 base/syscall.S     | 8 ++++++++
 inc/base/syscall.h | 3 ++-
 3 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/base/log.c b/base/log.c
index 4cf2dfa..19c229e 100644
--- a/base/log.c
+++ b/base/log.c
@@ -24,6 +24,7 @@ void logk(int level, const char *fmt, ...)
 	va_list ptr;
 	off_t off;
 	int cpu;
+	size_t len;
 
 	if (level > max_loglevel)
 		return;
@@ -43,7 +44,9 @@ void logk(int level, const char *fmt, ...)
 	va_start(ptr, fmt);
 	vsnprintf(buf + off, MAX_LOG_LEN - off, fmt, ptr);
 	va_end(ptr);
-	puts(buf);
+
+	len = strlen(buf);
+	syscall_write(1, buf, len);
 
 	if (level <= LOG_ERR)
 		fflush(stdout);
diff --git a/base/syscall.S b/base/syscall.S
index 528843c..00e7973 100644
--- a/base/syscall.S
+++ b/base/syscall.S
@@ -5,6 +5,14 @@
 .globl base_syscall_start
 base_syscall_start:
 
+.align 16
+.globl syscall_write
+.type syscall_write, @function
+syscall_write:
+	movl	$__NR_write, %eax
+	syscall
+	ret
+
 .align 16
 .globl syscall_mmap
 syscall_mmap:
diff --git a/inc/base/syscall.h b/inc/base/syscall.h
index 88d3662..3d67b37 100644
--- a/inc/base/syscall.h
+++ b/inc/base/syscall.h
@@ -21,4 +21,5 @@ extern void syscall_rt_sigreturn(void);
 extern int syscall_ioctl(int fd, unsigned long int request, void *arg);
 extern int syscall_madvise(void *addr, size_t length, int advice);
 extern int syscall_mprotect(void *addr, size_t len, int prot);
-extern void syscall_exit(int status) __noreturn;
\ No newline at end of file
+extern void syscall_exit(int status) __noreturn;
+extern ssize_t syscall_write(int fd, const void *buf, size_t count);
-- 
2.34.1

